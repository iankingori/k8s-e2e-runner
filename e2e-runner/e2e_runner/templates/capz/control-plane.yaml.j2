---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: {{ cluster_name }}-control-plane
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          allocate-node-cidrs: "false"
          cloud-provider: external
          cluster-name: {{ cluster_name }}
      etcd:
        local:
          dataDir: /var/lib/etcddisk/etcd
          extraArgs:
            quota-backend-bytes: "8589934592"
    diskSetup:
      filesystems:
      - device: /dev/disk/azure/scsi1/lun0
        extraOpts:
        - -E
        - lazy_itable_init=1,lazy_journal_init=1
        filesystem: ext4
        label: etcd_disk
      - device: ephemeral0.1
        filesystem: ext4
        label: ephemeral0
        replaceFS: ntfs
      partitions:
      - device: /dev/disk/azure/scsi1/lun0
        layout: true
        overwrite: false
        tableType: gpt
    files:
{%- if flannel_mode == "vxlan" %}
    - content: |
        network:
          version: 2
          ethernets:
            eth0:
              mtu: 1400
      owner: root:root
      path: /etc/netplan/60-eth0.yaml
      permissions: "0644"
{%- endif %}
    - contentFrom:
        secret:
          key: control-plane-azure.json
          name: {{ cluster_name }}-control-plane-azure-json
      owner: root:root
      path: /etc/kubernetes/azure.json
      permissions: "0644"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
{%- raw %}
        name: '{{ ds.meta_data["local_hostname"] }}'
{%- endraw %}
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
{%- raw %}
        name: '{{ ds.meta_data["local_hostname"] }}'
{%- endraw %}
    mounts:
    - - LABEL=etcd_disk
      - /var/lib/etcddisk
    preKubeadmCommands:
    - curl -Lo /run/kubeadm/kubeadm-bootstrap.sh http://{{ bootstrap_vm_endpoint }}/scripts/kubeadm-bootstrap.sh
    - bash /run/kubeadm/kubeadm-bootstrap.sh --ci-packages-base-url http://{{ bootstrap_vm_endpoint }} --k8s-bins-built {{ k8s_bins }}
{%- if flannel_mode == "vxlan" %}
    postKubeadmCommands:
    - netplan apply
{%- endif %}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      name: {{ cluster_name }}-control-plane
  version: {{ kubernetes_version }}
  replicas: 1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: {{ cluster_name }}-control-plane
  namespace: default
spec:
  template:
    spec:
      dataDisks:
      - diskSizeGB: 128
        lun: 0
        nameSuffix: etcddisk
      osDisk:
        diskSizeGB: 128
        osType: Linux
      sshPublicKey: {{ azure_ssh_public_key_b64 }}
      vmSize: {{ master_vm_size }}
{%- if flannel_mode == "host-gw" %}
      enableIPForwarding: true
{%- endif %}
      image:
        computeGallery:
          name: {{ capz_sig_ubuntu_image_name  }}
          gallery: "ClusterAPI-f72ceb4f-5159-4c26-a0fe-2ea738f0d019"
          version: {{ capz_sig_ubuntu_image_version }}
